
package Client.com;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "FrontendImplService", targetNamespace = "http://Frontend/", wsdlLocation = "file:/Users/t_chaml/room-reservation-project/src/Client/com/campus.wsdl")
public class FrontendImplService
    extends Service
{

    private final static URL FRONTENDIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException FRONTENDIMPLSERVICE_EXCEPTION;
    private final static QName FRONTENDIMPLSERVICE_QNAME = new QName("http://Frontend/", "FrontendImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/Users/t_chaml/room-reservation-project/src/Client/com/campus.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        FRONTENDIMPLSERVICE_WSDL_LOCATION = url;
        FRONTENDIMPLSERVICE_EXCEPTION = e;
    }

    public FrontendImplService() {
        super(__getWsdlLocation(), FRONTENDIMPLSERVICE_QNAME);
    }

    public FrontendImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), FRONTENDIMPLSERVICE_QNAME, features);
    }

    public FrontendImplService(URL wsdlLocation) {
        super(wsdlLocation, FRONTENDIMPLSERVICE_QNAME);
    }

    public FrontendImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, FRONTENDIMPLSERVICE_QNAME, features);
    }

    public FrontendImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public FrontendImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns FrontendInterface
     */
    @WebEndpoint(name = "FrontendImplPort")
    public FrontendInterface getFrontendImplPort() {
        return super.getPort(new QName("http://Frontend/", "FrontendImplPort"), FrontendInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns FrontendInterface
     */
    @WebEndpoint(name = "FrontendImplPort")
    public FrontendInterface getFrontendImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://Frontend/", "FrontendImplPort"), FrontendInterface.class, features);
    }

    private static URL __getWsdlLocation() {
        if (FRONTENDIMPLSERVICE_EXCEPTION!= null) {
            throw FRONTENDIMPLSERVICE_EXCEPTION;
        }
        return FRONTENDIMPLSERVICE_WSDL_LOCATION;
    }

}


package Replicas.Replica1.com;

import javax.xml.namespace.QName;
import javax.xml.ws.*;
import java.net.MalformedURLException;
import java.net.URL;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "CampusServerService", targetNamespace = "http://com/", wsdlLocation = "file:/Users/t_chaml/drrsWS/CampusClientApplication/src/client/campus.wsdl")
public class CampusServerService
    extends Service
{

    private final static URL CAMPUSSERVERSERVICE_WSDL_LOCATION;
    private final static WebServiceException CAMPUSSERVERSERVICE_EXCEPTION;
    private final static QName CAMPUSSERVERSERVICE_QNAME = new QName("http://com/", "CampusServerService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/Users/t_chaml/drrsWS/CampusClientApplication/src/client/campus.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        CAMPUSSERVERSERVICE_WSDL_LOCATION = url;
        CAMPUSSERVERSERVICE_EXCEPTION = e;
    }

    public CampusServerService() {
        super(__getWsdlLocation(), CAMPUSSERVERSERVICE_QNAME);
    }

    public CampusServerService(WebServiceFeature... features) {
        super(__getWsdlLocation(), CAMPUSSERVERSERVICE_QNAME, features);
    }

    public CampusServerService(URL wsdlLocation) {
        super(wsdlLocation, CAMPUSSERVERSERVICE_QNAME);
    }

    public CampusServerService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CAMPUSSERVERSERVICE_QNAME, features);
    }

    public CampusServerService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CampusServerService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ServerInterface
     */
    @WebEndpoint(name = "KKLCampusServerPort")
    public ServerInterface getKKLCampusServerPort() {
        return super.getPort(new QName("http://com/", "KKLCampusServerPort"), ServerInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ServerInterface
     */
    @WebEndpoint(name = "KKLCampusServerPort")
    public ServerInterface getKKLCampusServerPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://com/", "KKLCampusServerPort"), ServerInterface.class, features);
    }

    /**
     * 
     * @return
     *     returns ServerInterface
     */
    @WebEndpoint(name = "WSTCampusServerPort")
    public ServerInterface getWSTCampusServerPort() {
        return super.getPort(new QName("http://com/", "WSTCampusServerPort"), ServerInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ServerInterface
     */
    @WebEndpoint(name = "WSTCampusServerPort")
    public ServerInterface getWSTCampusServerPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://com/", "WSTCampusServerPort"), ServerInterface.class, features);
    }

    /**
     * 
     * @return
     *     returns ServerInterface
     */
    @WebEndpoint(name = "DVLCampusServerPort")
    public ServerInterface getDVLCampusServerPort() {
        return super.getPort(new QName("http://com/", "DVLCampusServerPort"), ServerInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ServerInterface
     */
    @WebEndpoint(name = "DVLCampusServerPort")
    public ServerInterface getDVLCampusServerPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://com/", "DVLCampusServerPort"), ServerInterface.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CAMPUSSERVERSERVICE_EXCEPTION!= null) {
            throw CAMPUSSERVERSERVICE_EXCEPTION;
        }
        return CAMPUSSERVERSERVICE_WSDL_LOCATION;
    }

}
